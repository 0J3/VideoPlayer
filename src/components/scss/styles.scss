@use './slider';
@use './vars';

// ANCHOR Mouse Events
.ComponentRoot,
.App,
video,
.video {
	pointer-events: none;
}
.controls,
#preact_root {
	pointer-events: initial;
}
.executeClick {
	pointer-events: initial;
	position: fixed;
	top: 0;
	left: 0;
	height: calc(100vw - #{vars.$controlHeight});
	width: 100vw;
}

// ANCHOR Warning Banners
.App.ComponentRoot.VideoPlayer.J3VideoPlayer {
	&::before {
		position: fixed;
		top: 0;
		left: 50vw;
		min-width: 20vw;
		max-width: 100vw;
		width: max-content;
		transform: translate(-50%, 0);
		text-align: center;
		text-align-last: center;
		padding: 5px 15px;
		// transition: opacity 1s, background 1s, top 1s, border-radius 1s,
		// 	border-top-left-radius 1s, border-top-right-radius 1s,
		// 	border-bottom-left-radius 1s, border-bottom-right-radius 1s, color 1s,
		//  width 1s;
		transition: all 1s;
		font-size: 20px;
		opacity: 1;
		border-radius: 38px;
		z-index: 5;
		backdrop-filter: blur(20px);
	}
	&:hover::before {
		opacity: 0.8;
	}

	display: block;
	&[data-dev='development'] {
		&::before {
			[data-darkreader-mode] & {
				background: rgba(0, 136, 247, 0.753);
				color: #fff;
			}
			content: 'This is a DEVELOPMENT BUILD!';
			background: rgba(255, 255, 0, 0.753);
			color: #000 !important;
		}
		&:hover::before {
			opacity: 0.8;
		}
		--top: 38px;
	}
	&[data-dev='testing'],
	&[data-dev='test'] {
		&::before {
			[data-darkreader-mode] & {
				background: rgb(177, 0, 247);
				color: #fff;
			}
			content: 'This is a TEST BUILD!';
			background: rgb(177, 0, 247);
			color: #000 !important;
		}
		--top: 38px;
	}
	&:not([data-dev='testing']):not([data-dev='test']):not([data-dev='development']):not([data-dev='production']) {
		&::before {
			[data-darkreader-mode] & {
				background: rgb(177, 0, 247);
				color: #fff;
			}
			content: 'This is an UNKNOWN BUILD ENVIRONMENT!';
			background: rgb(177, 0, 247);
			color: #000 !important;
		}
		--top: 38px;
	}
	--top: 0px;
	top: var(--top);
	height: calc(100vh - var(--top)) !important;
	// height: 100vw;
	left: 0;
	position: fixed;
	transition: height 1s, top 1s;
}
// Mobile
$breakingPoint: 674px;
@media screen and (min-width: $breakingPoint) {
	.App.ComponentRoot.VideoPlayer.J3VideoPlayer {
		--top: 0px !important;
	}
	[data-ishidden='true'] {
		.App.ComponentRoot.VideoPlayer.J3VideoPlayer::before {
			top: -64px !important;
		}
	}
}
@media screen and (max-width: $breakingPoint) {
	.App.ComponentRoot.VideoPlayer.J3VideoPlayer::before {
		width: 100vw;
		border-top-left-radius: 0;
		border-top-right-radius: 0;
		border-bottom-left-radius: 0;
		border-bottom-right-radius: 0;
	}
	.App.ComponentRoot.VideoPlayer.J3VideoPlayer {
		--top: 38px;
	}
	.playercomponent .controls {
		bottom: 0 !important;
	}
}

// SECTION Player
.playercomponent {
	// SECTION Controls
	.controls {
		// ANCHOR Backdrop Filter (Chromium-based only)
		backdrop-filter: blur(20px);
		// ANCHOR Position
		position: fixed;
		// ANCHOR Always have it at the bottom
		bottom: 0;
		// ANCHOR Except when the cursor is hidden
		[data-ishidden='true'] & {
			bottom: -1 * vars.$controlHeight;
		}
		// ANCHOR but always show it when on <$breakingPoint width
		// MOVED TO: See last section

		// ANCHOR Height must always be $controlHeight
		height: vars.$controlHeight;

		// ANCHOR Text Colour
		color: #fff;

		// ANCHOR Background Colour
		background-color: rgba(0, 0, 0, 0.479);

		// ANCHOR Width must be the entire f*cking screen
		width: 100vw;

		// ANCHOR Transition EVERYTHING
		transition: all 1s;
	}
	// !SECTION

	// SECTION Video
	.video {
		width: 100vw;
		height: 100vh;
		position: fixed;
		left: 0;
		top: 0;
		z-index: 0;
	}
	// !SECTION
}
// !SECTION
